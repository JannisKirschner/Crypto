



Create an asn1 definition file:


$vim def.asn1


# Start with a SEQUENCE
asn1=SEQUENCE:pubkeyinfo

# pubkeyinfo contains an algorithm identifier and the public key wrapped
# in a BIT STRING
[pubkeyinfo]
algorithm=SEQUENCE:rsa_alg
pubkey=BITWRAP,SEQUENCE:rsapubkey

# algorithm ID for RSA is just an OID and a NULL
[rsa_alg]
algorithm=OID:rsaEncryption
parameter=NULL

# Actual public key: modulus and exponent
[rsapubkey]
n=INTEGER:0x%%MODULUS%%

e=INTEGER:0x%%EXPONENT%%
#Replace the %%% %%% with your values







 $ openssl asn1parse -genconf def.asn1 -out pubkey.der -noout
 $ openssl rsa -in pubkey.der -inform der -pubin -out pubkey.pem
 
 
 
 
 Alternatively:
 sed -i "s/%%MODULUS%%/$(xxd -ps -c 256 mymodulus.bin)/" def.asn1
 Note the -c 256 should be chosen according to your key length in bytes.
 
 
 For verifying use: openssl dgst -verify or openssl rsautl -verify

Source:https://stackoverflow.com/questions/11541192/creating-a-rsa-public-key-from-its-modulus-and-exponent
